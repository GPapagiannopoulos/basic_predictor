#import necessary modules
import yfinance as yf
import datetime
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
from sklearn.metrics import mean_squared_error
from math import sqrt

def get_info(stock):
    ticker = yf.Ticker(stock)
    history = ticker.history("5y")
    history.reset_index(inplace= True)
    history.drop(columns = ["Dividends", "Stock Splits"], inplace= True)
    history["Date"] = history["Date"].dt.date.astype("datetime64")
    history['Date'] = history['Date'].map(datetime.datetime.toordinal)
    history["Open"] = history["Open"].shift(-1)
    history = history[:-1]

    return history 


def train_and_test(stock):
    history = get_info(stock)
    predictors = list(set(list(history.columns)) - set(["Open"]))
    X = history[predictors].values
    y = history["Open"].values

    X_train = X[:-100]
    X_test = X[-100:]
    y_train = y[:-100]
    y_test = y[-100:]

    lr = LinearRegression()
    lr.fit(X_train, y_train)

    pred_train_lr = lr.predict(X_train)
    pred_test_lr = lr.predict(X_test)

    print("Training Set: MSE = {} and R2 = {}".format(np.sqrt(mean_squared_error(y_train,pred_train_lr)), 
                                                      r2_score(y_train, pred_train_lr)))
    print("Test Set: MSE = {} and R2 = {}".format(np.sqrt(mean_squared_error(y_test,pred_test_lr)), 
                                                  r2_score(y_test, pred_test_lr)))


def most_recent(stock):
    ticker = yf.Ticker(stock)
    history = ticker.history("1d")
    history.reset_index(inplace= True)
    history.drop(columns = ["Dividends", "Stock Splits", "Open"], inplace= True)
    history["Date"] = history["Date"].dt.date.astype("datetime64")
    history['Date'] = history['Date'].map(datetime.datetime.toordinal)

    return history 


def make_prediction(stock):
    history = get_info(stock)
    predictors = list(set(list(history.columns)) - set(["Open"]))
    X = history[predictors]
    X = X[["Date", "High", "Low", "Close", "Volume"]].values
    y = history["Open"].values 

    X_train = X
    y_train = y

    lr = LinearRegression()
    lr.fit(X_train, y_train)

    array = most_recent(stock).values.reshape(1, -1)

    prediction = lr.predict(array)

    return prediction

make_prediction("MSFT")
